// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3SwC2F4BeXucfS9cpFbd24
// Component: XBw1Lgr7lQD
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Valueprop from "../../Valueprop"; // plasmic-import: YnVQB3eyyN/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_landing_kit.module.css"; // plasmic-import: 3SwC2F4BeXucfS9cpFbd24/projectcss
import * as sty from "./PlasmicValuesSection4.module.css"; // plasmic-import: XBw1Lgr7lQD/css
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: 0OrmAo3X9i/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: fhx-oSTxAr/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: VOPzjHk6_f/icon
import Icon23Icon from "./icons/PlasmicIcon__Icon23"; // plasmic-import: M8z71GurjA/icon

export const PlasmicValuesSection4__VariantProps = new Array();

export const PlasmicValuesSection4__ArgProps = new Array("foreground");

function PlasmicValuesSection4__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"hero23"}
        data-plasmic-override={overrides.hero23}
        className={classNames(defaultcss.all, sty.hero23)}
      >
        <div
          data-plasmic-name={"background"}
          data-plasmic-override={overrides.background}
          className={classNames(defaultcss.all, sty.background)}
        />

        <p.Stack
          as={"div"}
          data-plasmic-name={"foreground"}
          data-plasmic-override={overrides.foreground}
          hasGap={true}
          className={classNames(defaultcss.all, sty.foreground)}
        >
          {p.renderPlasmicSlot({
            defaultContents: (
              <React.Fragment>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__ms5Oj)}
                >
                  <div className={classNames(defaultcss.all, sty.box__nxdYw)}>
                    <h2
                      className={classNames(
                        defaultcss.h2,
                        defaultcss.__wab_text,
                        sty.h2__hWsSq
                      )}
                    >
                      {"Next-level"}
                    </h2>
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__dVNiu
                    )}
                  >
                    {"Dui urna enim a tempus commodo adipiscing ullamcorper."}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__b243L)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__lQiCr)}
                  >
                    <Valueprop
                      className={classNames(
                        "__wab_instance",
                        sty.valueprop__maGlY
                      )}
                      dark={"dark"}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__obNoM
                          )}
                        >
                          {
                            "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                          }
                        </div>
                      }
                      slot2={
                        <Icon21Icon
                          className={classNames(defaultcss.all, sty.svg__bvAtR)}
                          role={"img"}
                        />
                      }
                      vertical={"vertical"}
                    >
                      {"Harder"}
                    </Valueprop>

                    <Valueprop
                      className={classNames(
                        "__wab_instance",
                        sty.valueprop__x99Bz
                      )}
                      dark={"dark"}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__pmgIx
                          )}
                        >
                          {
                            "Consequat scelerisque a eros taciti nisl a sodales."
                          }
                        </div>
                      }
                      slot2={
                        <Icon18Icon
                          className={classNames(defaultcss.all, sty.svg__s2X81)}
                          role={"img"}
                        />
                      }
                      vertical={"vertical"}
                    >
                      {"Better"}
                    </Valueprop>

                    <Valueprop
                      className={classNames(
                        "__wab_instance",
                        sty.valueprop___5OHbJ
                      )}
                      dark={"dark"}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__zKWj
                          )}
                        >
                          {
                            "Varius ad malesuada ullamcorper cursus scelerisque a a."
                          }
                        </div>
                      }
                      slot2={
                        <Icon22Icon
                          className={classNames(defaultcss.all, sty.svg__gcTv1)}
                          role={"img"}
                        />
                      }
                      vertical={"vertical"}
                    >
                      {"Faster"}
                    </Valueprop>

                    <Valueprop
                      className={classNames(
                        "__wab_instance",
                        sty.valueprop__kt9XH
                      )}
                      dark={"dark"}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box___9PojP
                          )}
                        >
                          {
                            "Ut eu nam nostra taciti congue adipiscing curabitur."
                          }
                        </div>
                      }
                      slot2={
                        <Icon23Icon
                          className={classNames(
                            defaultcss.all,
                            sty.svg___4YadC
                          )}
                          role={"img"}
                        />
                      }
                      vertical={"vertical"}
                    >
                      {"Stronger"}
                    </Valueprop>
                  </p.Stack>
                </p.Stack>
              </React.Fragment>
            ),

            value: args.foreground
          })}
        </p.Stack>
      </div>
    </section>
  );
}

const PlasmicDescendants = {
  root: ["root", "hero23", "background", "foreground"],
  hero23: ["hero23", "background", "foreground"],
  background: ["background"],
  foreground: ["foreground"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicValuesSection4__ArgProps,
      internalVariantPropNames: PlasmicValuesSection4__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicValuesSection4__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicValuesSection4";
  } else {
    func.displayName = `PlasmicValuesSection4.${nodeName}`;
  }
  return func;
}

export const PlasmicValuesSection4 = Object.assign(
  // Top-level PlasmicValuesSection4 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    hero23: makeNodeComponent("hero23"),
    background: makeNodeComponent("background"),
    foreground: makeNodeComponent("foreground"),
    // Metadata about props expected for PlasmicValuesSection4
    internalVariantProps: PlasmicValuesSection4__VariantProps,
    internalArgProps: PlasmicValuesSection4__ArgProps
  }
);

export default PlasmicValuesSection4;
/* prettier-ignore-end */
