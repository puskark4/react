// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3SwC2F4BeXucfS9cpFbd24
// Component: MA4bVcmaSsw
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Valueprop from "../../Valueprop"; // plasmic-import: YnVQB3eyyN/component
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_landing_kit.module.css"; // plasmic-import: 3SwC2F4BeXucfS9cpFbd24/projectcss
import * as sty from "./PlasmicValuesSection3.module.css"; // plasmic-import: MA4bVcmaSsw/css
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: h9S1yezhrN/icon

export const PlasmicValuesSection3__VariantProps = new Array();

export const PlasmicValuesSection3__ArgProps = new Array("foreground");

function PlasmicValuesSection3__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"foreground"}
        data-plasmic-override={overrides.foreground}
        hasGap={true}
        className={classNames(defaultcss.all, sty.foreground)}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__w2HkB)}
              >
                <div className={classNames(defaultcss.all, sty.box__vKCtz)}>
                  <h2
                    className={classNames(
                      defaultcss.h2,
                      defaultcss.__wab_text,
                      sty.h2__zgzPk
                    )}
                  >
                    {"Proposing values"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__tGx8U
                  )}
                >
                  {
                    "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__qmqpd)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__vQ2Gj)}
                >
                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop__j4Tjs
                    )}
                    flat={"flat"}
                    slot={
                      "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                    }
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg__oZvaV)}
                        role={"img"}
                      />
                    }
                  >
                    {"Powerful"}
                  </Valueprop>

                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop__udIj0
                    )}
                    flat={"flat"}
                    slot={"Consequat scelerisque a eros taciti nisl a sodales."}
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg__mtqDa)}
                        role={"img"}
                      />
                    }
                  >
                    {"Faster"}
                  </Valueprop>

                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop__pq5Qx
                    )}
                    flat={"flat"}
                    slot={"At ut condimentum amet adipiscing ac diam a."}
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg__r01Xf)}
                        role={"img"}
                      />
                    }
                  >
                    {"Best and brightest"}
                  </Valueprop>

                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop__rNzq9
                    )}
                    flat={"flat"}
                    slot={
                      "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                    }
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg__tbaIe)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box___0LypE
                      )}
                    >
                      {"Dynamic range"}
                    </div>
                  </Valueprop>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__kcxNy)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__lV4Hq)}
                >
                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop__tFY0
                    )}
                    flat={"flat"}
                    slot={"Commodo pretium himenaeos nisi potenti ad in ante."}
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg__rlhbr)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__nnhqs
                      )}
                    >
                      {"Portable"}
                    </div>
                  </Valueprop>

                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop___4Sk3K
                    )}
                    flat={"flat"}
                    slot={"Magna ullamcorper ut arcu nisi a per facilisis."}
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg__uPgY)}
                        role={"img"}
                      />
                    }
                  >
                    {"Production-ready"}
                  </Valueprop>

                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop__yXpIo
                    )}
                    flat={"flat"}
                    slot={
                      "Ac lobortis praesent sagittis dictumst fermentum vestibulum nunc."
                    }
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg__uWh78)}
                        role={"img"}
                      />
                    }
                  >
                    {"Magical"}
                  </Valueprop>

                  <Valueprop
                    className={classNames(
                      "__wab_instance",
                      sty.valueprop__u0E3N
                    )}
                    flat={"flat"}
                    slot={"A parturient mi suspendisse nisl inceptos nullam a."}
                    slot2={
                      <Icon14Icon
                        className={classNames(defaultcss.all, sty.svg___1IGc5)}
                        role={"img"}
                      />
                    }
                  >
                    {"Accessible"}
                  </Valueprop>
                </p.Stack>
              </p.Stack>
            </React.Fragment>
          ),

          value: args.foreground
        })}
      </p.Stack>
    </section>
  );
}

const PlasmicDescendants = {
  root: ["root", "foreground"],
  foreground: ["foreground"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicValuesSection3__ArgProps,
      internalVariantPropNames: PlasmicValuesSection3__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicValuesSection3__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicValuesSection3";
  } else {
    func.displayName = `PlasmicValuesSection3.${nodeName}`;
  }
  return func;
}

export const PlasmicValuesSection3 = Object.assign(
  // Top-level PlasmicValuesSection3 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground: makeNodeComponent("foreground"),
    // Metadata about props expected for PlasmicValuesSection3
    internalVariantProps: PlasmicValuesSection3__VariantProps,
    internalArgProps: PlasmicValuesSection3__ArgProps
  }
);

export default PlasmicValuesSection3;
/* prettier-ignore-end */
